{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/examcomplete/examcomplete.component.ts","webpack:///src/app/examcomplete/examcomplete.component.html","webpack:///src/app/exammenu/exammenu.component.ts","webpack:///src/app/exammenu/exammenu.component.html","webpack:///src/app/exampage/exampage.component.ts","webpack:///src/app/exampage/exampage.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/invpage/Invpage.component.ts","webpack:///src/app/invpage/invpage.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","path","component","pathMatch","declarations","imports","providers","bootstrap","ExamcompleteComponent","http","data","JSON","stringify","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","console","log","responseText","open","setRequestHeader","send","ExammenuComponent","router","navigate","startExam","ExampageComponent","pictureTaken","showWebcam","multipleWebcamsAvailable","videoOptions","width","ideal","height","errors","webcamImage","outimg","trigger","socket","transports","getAvailableVideoInputs","mediaDevices","length","socketcontinue","on","message","intervalHandle","setInterval","next","emit","imageAsBase64","headers","post","img","subscribe","res","valid","alert","error","push","clearInterval","asObservable","completeExam","HomeComponent","route","username","emailAdr","password","info","fd","FormData","append","loginResponse","signUpButton","document","getElementById","signInButton","container","classList","add","remove","nav","body","className","preventDefault","event","target","files","file","signupFile","window","location","reload","onSelectSignupFile","signup","triggerSnapshot","login","InvpageComponent","disconnect","disconnectall","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewChild, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent{\n  title = 'angular-facial-recog';\n\n\n}\n","\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ExammenuComponent } from './exammenu/exammenu.component';\nimport { HomeComponent } from './home/home.component';\nimport { ExampageComponent } from './exampage/exampage.component';\nimport { ExamcompleteComponent } from './examcomplete/examcomplete.component';\nimport { InvpageComponent} from './invpage/Invpage.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport {WebcamModule} from 'ngx-webcam';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExammenuComponent,\n    HomeComponent,\n    ExampageComponent,\n    ExamcompleteComponent,\n    InvpageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    WebcamModule,\n    RouterModule.forRoot([\n    { path: 'app', component: AppComponent },\n    { path: '', pathMatch: 'full', component: HomeComponent },\n    { path: 'exampage', component: ExampageComponent },\n    { path: 'examcomplete', component: ExamcompleteComponent },\n    { path: 'exammenu', component: ExammenuComponent },\n    { path: 'invpage', component: InvpageComponent}\n\n      ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-examcomplete',\n  templateUrl: './examcomplete.component.html',\n  styleUrls: ['./examcomplete.component.scss']\n})\nexport class ExamcompleteComponent implements OnInit {\n\n  constructor(private http:HttpClient ) {}\n\n  blockChain: string;\n\n\n  ngOnInit() {\n  var data = JSON.stringify({\"canonicalId\":\"HarryPotter\",\"claims\":[{\"key\":\"nam\",\"value\":\"HarryPotter\"},{\"key\":\"dgr\",\"value\":\"Knowledge of Magic\"},{\"key\":\"rnk\",\"value\":\"A1\"},{\"key\": \"iss\",\"value\": \"Ministry of Magic\"}]});\n\n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n\n  xhr.addEventListener(\"readystatechange\", function() {\n    if(this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n\n  xhr.open(\"POST\", \"http://44.233.202.250:8080/v1/verifiableCredential\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\"Accept\", \"text/plain\");\n\n  xhr.send(data);\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n<nav id= \"main_nav\" class=\"navbar navbar-inverse\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a class=\"navbar-brand\" href=\"#\"><img src=\"assets/images/hog2.png\"></a>\n    </div>\n    <ul class=\"nav navbar-nav\">\n      <li class=\"active\"><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">Profile</a></li>\n      <li><a href=\"#\">Exam List</a></li>\n    </ul>\n    <ul class=\"nav navbar-nav navbar-right\">\n      <li><a href=\"#\"><span class=\"glyphicon glyphicon-log-out\"></span> Log out</a></li>\n    </ul>\n  </div>\n</nav>\n<embed style=\"align:centre;\" src=\"assets/CertificateOfMagic.pdf\" width=\"1500\" height=\"1000\" type=\"application/pdf\">\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from  '@angular/router'\n\n\n@Component({\n  selector: 'app-exammenu',\n  templateUrl: './exammenu.component.html',\n  styleUrls: ['./exammenu.component.scss']\n})\nexport class ExammenuComponent{\n\n  constructor(private router:Router) { }\n\n  ngOnInit() {\n\n  }\n\n  startExam(){\n   this.router.navigate(['exampage']);\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n<nav id= \"main_nav\" class=\"navbar navbar-inverse\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a class=\"navbar-brand\" href=\"#\"><img src=\"assets/images/hog2.png\"></a>\n    </div>\n    <ul class=\"nav navbar-nav\">\n      <li class=\"active\"><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">Profile</a></li>\n      <li><a href=\"#\">Exam List</a></li>\n    </ul>\n    <ul class=\"nav navbar-nav navbar-right\">\n      <li><a href=\"#\"><span class=\"glyphicon glyphicon-log-out\"></span> Log out</a></li>\n    </ul>\n  </div>\n</nav>\n<form>\n  <fieldset>\n    <legend>Please select your exam</legend>\n    <input type=\"radio\" id=\"radio1\" name=\"radios\" checked>\n    <label for=\"radio1\">Introduction to Myths and Magic Part 1 : Final Exam</label><br>\n    <input type=\"radio\" id=\"radio2\" name=\"radios\">\n    <label for=\"radio2\">The general knowledge exam of magic and the strange world</label><br>\n    <input type=\"radio\" id=\"radio3\" name=\"radios\">\n    <label for=\"radio3\">Advance study : Potion Masterclass Exam</label>\n  </fieldset>\n\n\n  <button (click)=\"startExam()\">Submit</button>\n</form>\n","import { Component, OnInit, EventEmitter, ɵConsole } from '@angular/core';\nimport { Router } from '@angular/router';\n// 1 added new for monitoring - starts//\nimport { Subject, Observable } from 'rxjs';\nimport { WebcamImage, WebcamInitError, WebcamUtil } from 'ngx-webcam';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n// 1 added new for monitoring - ends//\nimport * as io from 'socket.io-client';\nimport { Socket } from 'socket.io-client';\n\n@Component({\n  selector: 'app-exampage',\n  templateUrl: './exampage.component.html',\n  styleUrls: ['./exampage.component.scss']\n})\nexport class ExampageComponent implements OnInit {\n  public socket: any\n  constructor(private router: Router, private http: HttpClient) {\n    //this.socket = io.connect();\n    this.socket = io('http://localhost:5000', { transports: ['polling'] })\n  } //2 added for HTTPClien\n  //socket = io('http://localhost:5000')\n  // 3 added new for monitoring - starts//\n  public pictureTaken = new EventEmitter<WebcamImage>();\n  public imagestr: any;\n  public showWebcam = true;\n  public multipleWebcamsAvailable = false;\n  public deviceId: string;\n  public returnval: string;\n  public intervalHandle: any;\n  public videoOptions: MediaTrackConstraints = {\n    width: {ideal: 160},\n    height: {ideal: 120}\n  };\n  public width: number = 100;\n  public height: number = 100;\n  public errors: WebcamInitError[] = [];\n  public webcamImage: WebcamImage = null;\n  public outimg : string = '';\n  private trigger: Subject<void> = new Subject<void>();\n  loginResponse: string\n  // 3 added new for monitoring - ends//\n\n  public handleImage(webcamImage: WebcamImage): void {\n    // console.info('received webcam image', webcamImage);\n    this.webcamImage = webcamImage;\n\n  }\n\n\n  // 4 added new for monitoring - starts//\n\n  public ngOnInit(): void {\n\n    // this.socket.on('connect', function(){\n    //   this.socket.emit('user is conencted!!!');\n    // });\n\n\n    WebcamUtil.getAvailableVideoInputs()\n      .then((mediaDevices: MediaDeviceInfo[]) => {\n        this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\n      }).then(() => {\n        this.socketcontinue();\n      });\n\n  }\n\n  public socketcontinue(): void {\n    this.socket.on('image_out', (message) => {\n      this.outimg = \"data:image/png;base64,\"+message;\n    })\n    this.intervalHandle = setInterval(() => {\n      this.trigger.next();\n      this.socket.emit('image', this.webcamImage.imageAsBase64);\n    }, 40);\n  };\n\n  public postcontinue(): void {\n    this.intervalHandle =\n      setInterval(() => {\n        this.trigger.next();\n        let headers = new HttpHeaders({\n          'Content-Type': 'application/json'\n        });\n        this.http.post(\"http://localhost:5000/videoStreaming\", { img: this.webcamImage.imageAsBase64 }, { headers }).subscribe((res: any) => {\n          //this.loginResponse = JSON.stringify(res)\n          //  alert(this.loginResponse);  \n          if (res.valid === false) {\n            alert(res.error);\n          }\n          console.log(res);\n\n        })\n      }, 40); // currently interval is set for every 5 seconds.\n  };\n\n  public handleInitError(error: WebcamInitError): void {\n    this.errors.push(error);\n  }\n\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n\n  // 4 added new for monitoring - ends//\n\n  completeExam() {\n    console.log('in the complete')\n    clearInterval(this.intervalHandle);\n    this.trigger.next();\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    // this.http.post(\"http://localhost:5000/videoStreamingClose\", { img: this.webcamImage.imageAsBase64 }, {headers }).subscribe((res:any) => {\n    //this.loginResponse = JSON.stringify(res)\n    //  alert(this.loginResponse);  \n    // if (res.valid === false){\n    //   alert(res.error);\n    // }\n    //console.log(res);\n    //});\n\n    // this.socket.emit('disconnect');\n    // this.socket.disconnect();\n\n    this.router.navigate(['examcomplete']);\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n<nav id=\"main_nav\" class=\"navbar navbar-inverse\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a class=\"navbar-brand\" href=\"#\"><img src=\"assets/images/hog2.png\"></a>\n    </div>\n    <div>\n      <webcam [height]=\"100\" [width]=\"100\" [trigger]=\"triggerObservable\" (imageCapture)=\"handleImage($event)\"\n        *ngIf=\"showWebcam\" [videoOptions]=\"videoOptions\" (initError)=\"handleInitError($event)\"></webcam>\n\n    </div>\n    <div>\n      <img [src]=\"outimg\" width=\"320px\" height=\"240px\"/>\n    </div>\n    <ul class=\"nav navbar-nav\">\n      <li class=\"active\"><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">Profile</a></li>\n      <li><a href=\"#\">Exam List</a></li>\n    </ul>\n    <ul class=\"nav navbar-nav navbar-right\">\n      <li><a href=\"#\"><span class=\"glyphicon glyphicon-log-out\"></span> Log out</a></li>\n    </ul>\n  </div>\n</nav>\n<form>\n\n  <fieldset>\n    <legend>Which of the following is a real spell</legend>\n    <input type=\"radio\" id=\"radio1\" name=\"radios\" checked>\n    <label for=\"radio1\">Hocis Pocis</label><br>\n    <input type=\"radio\" id=\"radio2\" name=\"radios\">\n    <label for=\"radio2\">Ablakazam</label><br>\n    <input type=\"radio\" id=\"radio3\" name=\"radios\">\n    <label for=\"radio3\">Lumos</label>\n  </fieldset>\n\n  <fieldset>\n    <legend>What is the name of a person without magic</legend>\n    <input type=\"radio\" id=\"radio4\" name=\"radios1\" checked>\n    <label for=\"radio1\">Moggel</label><br>\n    <input type=\"radio\" id=\"radio5\" name=\"radios1\">\n    <label for=\"radio2\">Mogel</label><br>\n    <input type=\"radio\" id=\"radio6\" name=\"radios1\">\n    <label for=\"radio3\">Muggle</label>\n  </fieldset>\n  <fieldset>\n    <legend>Which bird rises from the ashes</legend>\n    <input type=\"radio\" id=\"radio7\" name=\"radios2\" checked>\n    <label for=\"radio7\">Pegasus</label><br>\n    <input type=\"radio\" id=\"radio8\" name=\"radios2\">\n    <label for=\"radio8\">Pheonix</label><br>\n    <input type=\"radio\" id=\"radio9\" name=\"radios2\">\n    <label for=\"radio9\">Dragon Dove</label>\n  </fieldset>\n\n  <button (click)=\"completeExam()\">Submit Answers</button>\n</form>","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport {Router} from  '@angular/router'\nimport { HttpClient } from '@angular/common/http';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\nimport {WebcamImage, WebcamInitError, WebcamUtil} from 'ngx-webcam';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent{\n\n  constructor(private route:Router,private http:HttpClient ) { }\n\n  //let img = new Image();\n  public webcamImage: WebcamImage = null;\n  private trigger: Subject<void> = new Subject<void>();\n  public pictureTaken = new EventEmitter<WebcamImage>();\n  public errors: WebcamInitError[] = [];\n  public showWebcam = true;\n  file: File\n      signupFile: File\n      username: string =\"\";\n      emailAdr: string=\"\";\n      password: string=\"\";\n      loginResponse: string;\n\n\n\n  public triggerSnapshot(): void {\n    this.trigger.next();\n\n  }\n  public handleImage(webcamImage: WebcamImage): void {\n  console.info('received webcam image', webcamImage.imageAsBase64);\n  //this.pictureTaken.emit(webcamImage);\n  //this.webcamImage = webcamImage\n  //img.crossOrigin = 'Anonymous';\n  //img.src = webcamImage;\n  var fd = new FormData();\n          fd.append('imageFile', webcamImage.imageAsBase64);\n          fd.append('userId', this.username);\n        this.http.post<any>('http://localhost:8080/ca/facialRecognition', fd).subscribe(data => {\n          this.loginResponse = data.message;\n\n\n         if(this.loginResponse == 'Facial Recognition Successful'){\n         alert(this.loginResponse)\n           this.route.navigate(['exammenu']);\n         }else {\n\n         alert(this.loginResponse)\n\n\n         }\n         })\n  }\n  public handleInitError(error: WebcamInitError): void {\n  this.errors.push(error);\n  }\n  public get triggerObservable(): Observable<void> {\n  return this.trigger.asObservable();\n  }\n\n  ngOnInit() {\n   const signUpButton = document.getElementById('signUp');\n    const signInButton = document.getElementById('signIn');\n    const container = document.getElementById('container');\n\n    signUpButton.addEventListener('click', ()=> container.classList.add('right-panel-active')\n    );\n    signInButton.addEventListener('click', ()=> container.classList.remove('right-panel-active')\n    );\n\n    var nav = document.getElementById('main_nav'),\n          body = document.body;\n\n      signUpButton.addEventListener('click', function(e) {\n      body.className = body.className? '' : 'with_nav';\n          e.preventDefault();\n      });\n\n\n\n\n    }\n\n\n   onSelectFile(event) {\n        console.log(\"login\" + event.target.files[0]);\n        this.file = event.target.files[0]\n    }\n\n    onSelectSignupFile(event) {\n\n        console.log(\"signupfile\" + event.target.files[0]);\n        this.signupFile = event.target.files[0]\n      }\n\n    signup(){\n    var fd = new FormData();\n            fd.append('imageFile', this.signupFile);\n            fd.append('userId', this.emailAdr);\n            fd.append('password', this.password);\n            this.http.post<any>('http://localhost:8080/ca/register', fd).subscribe(data => {\n                    this.loginResponse = data.message;\n                    alert(this.loginResponse);\n                    window.location.reload();\n                    })\n\n    }\n\n    login(){\n\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.10.2/css/all.css\">\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<div class=\"container\" id=\"container\">\n  <div class=\"form-container sign-up-container\">\n    <form action=\"#\">\n      <div class=\"social-container\">\n        <img src=\"assets/images/hog.png\" style=\"width:300px;height:230px;\">\n      </div>\n      <h1>Create Account</h1>\n      <input type=\"text\" placeholder=\"First Name\"/>\n      <input type=\"text\" placeholder=\"Last Name\"/>\n      <input [(ngModel)]=\"emailAdr\" [ngModelOptions]=\"{standalone: true}\" type=\"email\" placeholder=\"Email\"/>\n      <input [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" type=\"password\" placeholder=\"Password\"/>\n      <label for=\"img1\">Please upload document ID:</label>\n      <input (change)=\"onSelectSignupFile($event)\" type=\"file\" id=\"img1\" name=\"img\" accept=\"image/*\">\n      <button (click)=\"signup()\"class=\"su\">Sign Up</button>\n    </form>\n  </div>\n  <div class=\"form-container sign-in-container\">\n    <form action=\"#\">\n      <div class=\"social-container\">\n        <img src=\"assets/images/hog.png\" style=\"width:300px;height:230px;\">\n      </div>\n      <input id=\"username\"  [(ngModel)]=\"username\" [ngModelOptions]=\"{standalone: true}\" type=\"text\"  placeholder=\"Email\" />\n      <input type=\"password\" placeholder=\"Password\"/>\n      <label>Capture or Select image for facial recognition</label>\n      <!--<input type='file' (change)=\"onSelectFile($event)\">-->\n      <!--div style=\"text-align:center\">-->\n      <div>\n        <webcam [height]=\"275\" [width]=\"275\" [trigger]=\"triggerObservable\" (imageCapture)=\"handleImage($event)\" *ngIf=\"showWebcam\"\n                (initError)=\"handleInitError($event)\"></webcam>\n        <br/>\n\n        <div class=\"actionBtn\" (click)=\"triggerSnapshot();\" title=\"Take Picture\"></div>\n        <!--<div class=\"actionBtn\" (click)=\"showNextWebcam(true);\" title=\"Switch Camera\">🔁</div>-->\n      </div>\n      <a>I Forgot my Password</a>\n      <button class=\"actionBtn\" (click)=\"triggerSnapshot();\" title=\"Take Picture\" (click)=\"login()\" class=\"si\">Sign In\n      </button>\n    </form>\n  </div>\n  <div class=\"overlay-container\">\n    <div class=\"overlay\">\n      <div class=\"overlay-panel overlay-left\">\n        <h1>Welcome Back!</h1>\n        <p>Please login to view you Cambridge Assessments account</p>\n        <button class=\"ghost\" id=\"signIn\">Sign In</button>\n      </div>\n      <div class=\"overlay-panel overlay-right\">\n        <h1>Sign up</h1>\n        <p>Enter your personal details and start journey with us</p>\n        <button class=\"ghost\" id=\"signUp\">Sign Up</button>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport {Router} from  '@angular/router';\n// 1 added new for monitoring - starts//\nimport {Subject, Observable} from 'rxjs';\nimport {WebcamImage, WebcamInitError, WebcamUtil} from 'ngx-webcam';\nimport {HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\n\n// 1 added new for monitoring - ends//\n\n@Component({\n  selector: 'app-invpage',\n  templateUrl: './invpage.component.html',\n  styleUrls: ['./invpage.component.scss']\n})\nexport class InvpageComponent implements OnInit {\n\n  constructor(private router:Router,private http:HttpClient) { } //2 added for HTTPClient\n  socket = io.connect('http://localhost:5000')\n  //public intervalHandle: any;\n\n\n  public ngOnInit(): void{\n      //this.socketlisten();\n      //this.socket.connect()\n      //this.socket.nsp = '/invpage'\n    //   this.socket.on('message_out', function(message) {\n    //   console.log(message);\n    //  })\n    \n}\n\n\n// public socketlisten(): void{\n//   // this.imagestr =  this.webcamImage;\n//    this.intervalHandle = \n//    setInterval(() => {\n//      this.socket.on('message_out', function(message) {\n//       console.log(message);\n//      })\n//  }, 40);\n//    };\n\npublic disconnectall(): void{\n  console.log('disconnectall');\n  this.socket.emit('disconnect');\n  this.socket.disconnect();\n\n}\n\n}\n","<!doctype html>\n<html lang=\"en\">\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <title>Live Streaming Demonstration</title>\n    <!-- <title>Get Data</title>\n      <script src=\"/socket.io/socket.io.js\"></script> -->\n</head>\n<body>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-8  offset-lg-2\">\n            <h3 class=\"mt-5\">Live Streaming!!!!</h3>\n            <img src=\"http://localhost:5000/video_feed\"  height =80 width =100> \n            <!-- <script>\n            var socket = io.connect('localhost', {port: 5000});\n            socket.on('flaskapp', function(message) {\n              console.log(message)\n          });\n            </script> -->\n        </div>\n        <div>\n            <button (click)=\"disconnectall()\">close</button>\n     </div>>\n    </div>\n</div>\n</body>\n</html>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}